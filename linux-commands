Let's say we have a log file (access.log) containing lines like:

192.168.1.1 - - [01/Apr/2024:12:34:56 +0000] "GET /index.html HTTP/1.1" 200 1234
192.168.1.2 - - [01/Apr/2024:13:45:23 +0000] "POST /login HTTP/1.1" 404 0
192.168.1.3 - - [02/Apr/2024:09:12:34 +0000] "GET /page1.html HTTP/1.1" 200 5678
192.168.1.4 - - [02/Apr/2024:14:23:45 +0000] "GET /page2.html HTTP/1.1" 200 9876

1. Extract and print the IP addresses that made successful (200) GET requests.
2. Calculate and print the total number of bytes transferred in the log file.

Here's how we can solve this using awk, sed, and grep:
1. Extract and print IP addresses with successful GET requests using awk and grep:
CODE: awk '{if ($6 == 200 && $7 == "GET") print $1}' access.log

This awk command checks if the HTTP status code is 200 and the request method is GET, then it prints the IP address ($1).

Calculate and print the total bytes transferred using awk, sed, and grep:
CODE: grep 'HTTP/1.1" 200' access.log | sed 's/.* \([0-9]\+\)$/\1/' | awk '{sum+=$1} END {print "Total bytes transferred:", sum}'

Explanation:

1. grep 'HTTP/1.1" 200' access.log filters lines with HTTP status 200.
2. sed 's/.* \([0-9]\+\)$/\1/' extracts the last field containing bytes transferred.
3. awk '{sum+=$1} END {print "Total bytes transferred:", sum}' calculates and prints the sum of bytes transferred.
These commands demonstrate how to manipulate and extract data from a log file using awk, sed, and grep in a Linux environment.
